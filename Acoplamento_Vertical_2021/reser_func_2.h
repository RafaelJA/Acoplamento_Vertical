#pragma once
void calc_coef_grid(double *Ageo_t, double *Ageo_R, double *Ageo_PHI, double *Ageo_Z,
	double *Adir_F, double *Adir_B, double *Adir_W, double *Adir_E, double *Adir_N, double *Adir_S,
	double *CHI_F, double *CHI_B, double *CHI_W, double *CHI_E, double *CHI_N, double *CHI_S,
	double *R_P, double *PHI_P, double *Z_P,
	double *R_PB, double *R_PF, double *delta_PHI, double *delta_Z, double deltat_res,
	double *K_F, double *K_B, double *K_N, double *K_S, double *K_W, double *K_E,
	double *Kr, double *Kz,
	int o, int m, int n);

void ini_fields(int m, int n, int o, double yo, double rho_ws,
	double *So_coup, double *Sw_coup, double *Sg_coup, 
	double *po_coup, double *pw_coup, double *pg_coup, double *pb_coup, double *X_pb,
	double *So_layer, double *Sw_layer, double *deltaz, double pi, double pbi, double *phi_ref, double phi_ref_0);

void reini_fields(int m, int n, int o, double *So_coup, double *Sw_coup, double *Sg_coup,
	double *po_coup, double *pw_coup, double *pg_coup, double *pb_coup, double *X_pb,
	double *phi_ref, double phi_ref_0,
	int res_timesteps, int coup_ts_in, int int_in);

void grid_R(double re, double rw, int o, int m, int n,
	double *R_P, double *R_PF, double *R_PB);

void grid_Z(double L, double *deltaz, int o, int m, int n,
	double *delta_Z, double  *Z_P);

void grid_PHI(int o, int m, int n,
	double *delta_PHI, double  *PHI_P);

double calcula_prop(double x, double *xi, double *yi, int l);

double calcula_der_prop(double x, double *xi, double *yi, int l);

void inicializa_reser(int *res_timesteps,
	double *Re, double *Rw, double *deltaz,
	int *n, int *m, int *o,
	double *pi, double *pbi, 
	double *T, double *g, 
	double *C1, double *C2, double *C3,
	double *rho_air, double *rho_ws,  
	double *rho_os, double *rho_gs, 
	double *yg, double *yo, double *API,
	double *phi_ref, double *Cr,
	double *Swc, double *Sor, double *Sgr, double *epsilon,
	double *pcwmin, double *pcwmax, double *pcgmin, double *pcgmax, 
	double *krwmax, double *nw, double *ng, double *nog, double *now,
	double *parametrosBw, double *parametrosmig, double *ppc, double *Tpc,
	double *Bwi, double *Bpcw, double *Bpcg,
	double *yn2, double *yco2, double *yh2s,
	bool *zonaprodutora,
	double Re_i, double D, double p_i, double pb_i);

void calc_reser_u(int n, int m, int o, int *IA, int *JA,
	int *unW, int *ufW, int *uwbW, int *ueW, int *ucW, int *uwW, int *uebW, int *ubW, int *usW,
	int *unO, int *ufO, int *uwbO, int *ueO, int *ucO, int *uwO, int *uebO, int *ubO, int *usO,
	int *unG, int *ufG, int *uwbG, int *ueG, int *ucG, int *uwG, int *uebG, int *ubG, int *usG,
	double *Sw, int *neg, bool *NpureW);

void calc_water_pos_res2(double pw_P, double pw_CHI,
	double *B, double *A,
	double *controladorP, double *controladorSw,
	int y, int u,
	double Ageo, double Adir, double C, double K,
	double CHI,
	double lambda1_P, double lambda1_CHI,
	double d_lambda1_P_po, double d_lambda1_CHI_po,
	double d_lambda1_P_SW, double d_lambda1_CHI_SW,
	double dpcw_P_SW, double dpcw_CHI_SW);

void calc_water_grav_res2(double *B, double *A,
	double *controladorP, double *controladorSw,
	int y, int u, double G,
	double Ageo, double C, double K,
	double CHI,
	double lambda2_P, double lambda2_CHI,
	double d_lambda2_P_po, double d_lambda2_CHI_po,
	double d_lambda2_P_SW, double d_lambda2_CHI_SW,
	double dpcw_P_SW, double dpcw_CHI_SW);

void calc_oil_pos_res2(double po_P, double po_CHI,
	double *B, double *A,
	double *controladorP, double *controladorSw, double *controladorSo,
	int y, int u,
	double Ageo, double Adir, double C, double K,
	double CHI, double X_pb_P, double X_pb_CHI,
	double lambda1_P, double lambda1_CHI,
	double d_lambda1_P_po, double d_lambda1_CHI_po,
	double d_lambda1_P_SW, double d_lambda1_CHI_SW,
	double d_lambda1_P_pb, double d_lambda1_CHI_pb,
	double d_lambda1_P_SO, double d_lambda1_CHI_SO,
	int neg, bool NpureW);

void calc_oil_grav_res2(double *B, double *A,
	double *controladorP, double *controladorSw, double *controladorSo,
	int y, int u, double G,
	double Ageo, double C, double K,
	double CHI, double X_pb_P, double X_pb_CHI,
	double lambda2_P, double lambda2_CHI,
	double d_lambda2_P_po, double d_lambda2_CHI_po,
	double d_lambda2_P_SW, double d_lambda2_CHI_SW,
	double d_lambda2_P_pb, double d_lambda2_CHI_pb,
	double d_lambda2_P_SO, double d_lambda2_CHI_SO,
	int neg, bool NpureW);

void calc_gas_pos_res2(double po_P, double po_CHI,
	double pg_P, double pg_CHI,
	double *B, double *A,
	double *controladorP, double *controladorSw, double *controladorSo,
	int y, int u,
	double Ageo, double Adir, double C, double K,
	double CHI, double X_pb_P, double X_pb_CHI,
	double lambda1_P, double lambda1_CHI,
	double d_lambda1_P_po, double d_lambda1_CHI_po,
	double d_lambda1_P_SW, double d_lambda1_CHI_SW,
	double d_lambda1_P_pb, double d_lambda1_CHI_pb,
	double d_lambda1_P_SO, double d_lambda1_CHI_SO,
	double lambda3_P, double lambda3_CHI,
	double d_lambda3_P_po, double d_lambda3_CHI_po,
	double d_lambda3_P_SW, double d_lambda3_CHI_SW,
	double d_lambda3_P_pb, double d_lambda3_CHI_pb,
	double d_lambda3_P_SO, double d_lambda3_CHI_SO,
	double dpcg_P_SW, double dpcg_CHI_SW,
	double dpcg_P_SO, double dpcg_CHI_SO,
	int neg, bool NpureW);

void calc_gas_grav_res2(double *B, double *A,
	double *controladorP, double *controladorSw, double *controladorSo,
	int y, int u,
	double Ageo, double C, double G, double K,
	double CHI, double X_pb_P, double X_pb_CHI,
	double lambda2_P, double lambda2_CHI,
	double d_lambda2_P_po, double d_lambda2_CHI_po,
	double d_lambda2_P_SW, double d_lambda2_CHI_SW,
	double d_lambda2_P_pb, double d_lambda2_CHI_pb,
	double d_lambda2_P_SO, double d_lambda2_CHI_SO,
	double lambda4_P, double lambda4_CHI,
	double d_lambda4_P_po, double d_lambda4_CHI_po,
	double d_lambda4_P_SW, double d_lambda4_CHI_SW,
	double d_lambda4_P_pb, double d_lambda4_CHI_pb,
	double d_lambda4_P_SO, double d_lambda4_CHI_SO,
	int neg, bool NpureW);


void calc_reser_evol(int res_timesteps, int p, int y, int u, int l, int centerP, int centerSw, int centerSo,
	int *IA, int *JA, double *A, double *B, double *X,
	bool dontstopmenow, int i, int k, int j, int o, int m, int n, int dim,
	double controladorP, double controladorSw, double controladorSo,
	double *lambda1_W, double *d_lambda1_po_W, double *d_lambda1_SW_W,
	double *lambda2_W, double *d_lambda2_po_W, double *d_lambda2_SW_W,
	double *lambda1_O, double *d_lambda1_po_O, double *d_lambda1_SW_O, double *d_lambda1_pb_O, double *d_lambda1_SO_O,
	double *lambda2_O, double *d_lambda2_po_O, double *d_lambda2_SW_O, double *d_lambda2_pb_O, double *d_lambda2_SO_O,
	double *lambda1_G, double *d_lambda1_po_G, double *d_lambda1_SW_G, double *d_lambda1_pb_G, double *d_lambda1_SO_G,
	double *lambda2_G, double *d_lambda2_po_G, double *d_lambda2_SW_G, double *d_lambda2_pb_G, double *d_lambda2_SO_G,
	double *lambda3_G, double *d_lambda3_po_G, double *d_lambda3_SW_G, double *d_lambda3_pb_G, double *d_lambda3_SO_G,
	double *lambda4_G, double *d_lambda4_po_G, double *d_lambda4_SW_G, double *d_lambda4_pb_G, double *d_lambda4_SO_G,
	double *Kr, double *Kz, double pi, double T,
	double *PWB, double *PWB_0, double *Pb_WB, int N_wellbore,
	double *po_res, double *pb_res, double *pw_res, double *pg_res, double *Sw_res, double *So_res, double *Sg_res,
	double *po_res_0, double *pb_res_0, double *Sw_res_0, double *So_res_0, double *Sg_res_0, double *X_pb_0,
	double *phi_res_0, double *Bw_res_0, double *Rs_res_0, double *Bo_res_0, double *Bg_res_0,
	double *po_res_lv0, double *pb_res_lv0, double *So_res_lv0, double *Sw_res_lv0,
	double *varpo, double *varpb, double *varSo, double *varSw,
	double C1, double C2, double C3,
	double *Ageo_R, double *Ageo_PHI, double *Ageo_Z, double *Ageo_t,
	double *Adir_F, double *Adir_B, double *Adir_W, double *Adir_E, double *Adir_N, double *Adir_S,
	double *CHI_F, double *CHI_B, double *CHI_W, double *CHI_E, double *CHI_N, double *CHI_S,
	double *R_P, double *PHI_P, double *Z_P,
	double *R_PB, double *R_PF, double *delta_PHI, double *delta_Z, double deltat_res,
	double g, double Re, double Rw,
	double rho_air, double rho_ws, double rho_os, double rho_gs,
	double API, double yg, double yo,
	double *phi_ref, double Cr,
	double Qwsinj, double Qosinj, double Qgsinj,
	double *Qw_well, double *Qo_well, double *Qg_well, int coup_ts, int ite_coup,
	double *phi, double *der_phi,
	double *rho_w, double *der_rho_w,
	double *mi_w, double *der_mi_w,
	double *Bw, double *der_Bw,
	double *pcw, double *der_pcw,
	double *krw, double *der_krw,
	double *Rs, double *der_Rs_p, double *der_Rs_pb,
	double *kro, double *der_kro_Sw, double *der_kro_So,
	double *Bo, double *der_Bo_p, double *der_Bo_pb,
	double *mi_o, double *der_mi_o_p, double *der_mi_o_pb,
	double *rho_o, double *der_rho_o_p, double *der_rho_o_pb,
	double *pcg, double *der_pcg_Sw, double *der_pcg_So,
	double *krg, double *der_krg,
	double *mi_g, double *der_mi_g,
	double *Bg, double *der_Bg,
	double *rho_g, double *der_rho_g,
	double *K_F, double *K_B, double *K_N, double *K_S, double *K_W, double *K_E,
	double *X_pb, bool *zonaprodutora, int level,
	int *unW, int *ufW, int *uwbW, int *ueW, int *ucW, int *uwW, int *uebW, int *ubW, int *usW,
	int *unO, int *ufO, int *uwbO, int *ueO, int *ucO, int *uwO, int *uebO, int *ubO, int *usO,
	int *unG, int *ufG, int *uwbG, int *ueG, int *ucG, int *uwG, int *uebG, int *ubG, int *usG,
	int *iparm, double *dparm, int solver, int maxfct, int mnum, int phase, int error,
	int msglvl, int mtype, int nrhs, double ddum, int idum, void *pt,
	double Swc, double Sor, double Sgr, double epsilon,
	double pcwmin, double pcwmax, double pcgmin, double pcgmax,
	double krwmax, double nw, double ng, double nog, double now,
	double *parametrosBw, double *parametrosmig, double ppc, double Tpc,
	double Bwi, double Bpcw, double Bpcg,
	double yn2, double yco2, double yh2s,
	int *neg, bool *NpureW, char directory[]);

